/*
CREATE TABLE IF NOT EXISTS User (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    -- Add other user-related attributes
);

-- Add new columns to the User table
ALTER TABLE User
ADD email VARCHAR(255) NOT NULL,
ADD password VARCHAR(255) NOT NULL,
ADD cart TEXT,
ADD payment_info TEXT,
ADD phone_number VARCHAR(20),
ADD shipping_info TEXT;

// USER THE ONE I WANT IT TO BE:
CREATE TABLE User (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    cart TEXT,
    payment_info TEXT,
    phone_number VARCHAR(20),
    shipping_info TEXT,
    billing_info TEXT, -- Add the billing_info column
    -- Add other user-related attributes as needed
);


-- Create the orders table
CREATE TABLE IF NOT EXISTS orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    order_date DATETIME NOT NULL,
    total_price DEMICAL(10,2) NOT NULL,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES User(user_id)
);

CREATE TABLE IF NOT EXISTS Product (
    product_id INT AUTO_INCREMENT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    rating DECIMAL(3, 2),
    image_url VARCHAR(255),
    category VARCHAR(255),
    features TEXT,
    supplier_id INT, -- Foreign key to link products to suppliers
    FOREIGN KEY (supplier_id) REFERENCES Supplier(supplier_id)
);

CREATE TABLE IF NOT EXISTS Order_Product (
    order_id INT,
    product_id INT,
    quantity INT,
    FOREIGN KEY (order_id) REFERENCES `Order`(order_id),
    FOREIGN KEY (product_id) REFERENCES Product(product_id)
);


CREATE TABLE IF NOT EXISTS FAQ (
    faq_id INT AUTO_INCREMENT PRIMARY KEY,
    question VARCHAR(255) NOT NULL,
    answer TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS Review (
    review_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL, -- Foreign key to link reviews to users
    product_id INT NOT NULL, -- Foreign key to link reviews to products
    comment TEXT NOT NULL,
    rating DECIMAL(3, 2) NOT NULL, -- Assuming a rating out of 5 with 2 decimal places
    review_datetime DATETIME NOT NULL,
    -- Other review-related attributes
    FOREIGN KEY (user_id) REFERENCES User(user_id),
    FOREIGN KEY (product_id) REFERENCES Product(product_id)
);

-- Supplier table with additional attributes
CREATE TABLE IF NOT EXISTS Supplier (
    supplier_id INT AUTO_INCREMENT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address TEXT, -- Address attribute
    delivery_speed VARCHAR(50), -- Delivery speed attribute
    -- Other supplier-related attributes
);


/*
INSERT INTO Supplier (supplier_name, address, delivery_speed)
VALUES
    ('Supplier 1', '123 Main Street, City, Country', 'Fast'),
    ('Supplier 2', '456 Elm Street, Town, Country', 'Medium'),
    ('Supplier 3', '789 Oak Street, Village, Country', 'Slow');
    
-- Insert sample products
INSERT INTO Product (product_name, description, price, rating, image_url, category, features, supplier_id)
VALUES
    ('Product 1', 'Description for Product 1', 19.99, 4.5, 'image1.jpg', 'Category A', 'Feature A', 1),
    ('Product 2', 'Description for Product 2', 29.99, 3.8, 'image2.jpg', 'Category B', 'Feature B', 2),
    ('Product 3', 'Description for Product 3', 14.99, 4.2, 'image3.jpg', 'Category A', 'Feature C', 1);

-- Insert orders for user_id 9, referencing the products and quantities
-- Replace the values with appropriate data
INSERT INTO orders (order_date, total_price, user_id)
VALUES
    ('2023-09-28 10:00:00', 49.98, 9); -- Order 1 for User 9

-- Insert records into Order_Product to associate products with orders and specify quantities
-- Replace the values with appropriate product, order, and quantity values
INSERT INTO Order_Product (order_id, product_id, quantity)
VALUES
    (1, 1, 2), -- Order 1 includes 2 units of Product 1
    (1, 2, 3); -- Order 1 includes 3 units of Product 2
-- Add more records to associate products with orders and specify quantities as needed

`;
*/


*/